[Writable]
LogLevel = 'INFO'
    [Writable.StoreAndForward]
    Enabled = false
    RetryInterval = '5m'
    MaxRetryCount = 10

[Service]
BootTimeout = '30s'
ClientMonitor = '15s'
CheckInterval = '10s'
Host = 'localhost'
ServerBindAddr = "" # if blank, uses default Go behavior https://golang.org/pkg/net/#Listen
Port = 48095
Protocol = 'http'
ReadMaxLimit = 100
StartupMsg = 'This is a sample Application Service which filters, custom converts, prints and publishes back to message bus'
Timeout = '30s'

[Registry]
Host = 'localhost'
Port = 8500
Type = 'consul'

[Logging]
EnableRemote = false
File = './logs/simple-filter-xml-mqtt.log'

[Database]
Type = "redisdb"
Host = "localhost"
Port = 6379
Timeout = "30s"
Username = ""
Password = ""

[Clients]
  [Clients.CoreData]
  Protocol = 'http'
  Host = 'localhost'
  Port = 48080

  [Clients.Logging]
  Protocol = "http"
  Host = "localhost"
  Port = 48061

[MessageBus]
Type = 'zero'
    [MessageBus.PublishHost]
        Host = '*'
        Port = 5564
        Protocol = 'tcp'
    [MessageBus.SubscribeHost]
        Host = 'localhost'
        Port = 5563
        Protocol = 'tcp'


# This example depends on events generated by Device-Virtual-Go, so must use MessageBus trigger.
# It will publish back to the bus on the "converted" topic
[Binding]
Type="messagebus"
SubscribeTopic="events"
PublishTopic="converted"

[ApplicationSettings]
ValueDescriptors = "RandomValue_Float32, RandomValue_Float64"
